[
{
  "question": "Is it possible for an object to be immersed in fluid flow and have no stagnation points on its surface?",
  "answer": "No, any object fully immersed in fluid flow will have at least one stagnation point on its surface where the flow velocity is zero. It is possible for there to be more than one stagnation point on such an object, but it is impossible for there to be none."
},
{
  "question": "When solving for the velocity of a chaotic fast-moving fluid close to a wall would it be valid to employ Bernoulli’s equation?",
  "answer": "In this case using Bernoulli’s equation would be invalid. Bernoulli’s equation can only validly be used when the flow is steady, incompressible, and inviscid. The word chaotic indicates the fluid is turbulent, not steady. The fact that it is close to a wall indicates there would be non-negligible friction effects acting on the fluid."
},
{
  "question": "What differentiates the Navier-Stokes equations from Euler’s equations?",
  "answer": "Euler’s equations are derived from an application of Newton’s Second Law to inviscid flow. The Navier-Stokes equations take the viscosity terms into account."
},
{
  "question": "What is the relationship between viscosity and shear stress?",
  "answer": {
      "Viscosity is the proportionality coefficient that when multiplied by velocity gradient yields shear stress."
      "references": [
          https://en.wikipedia.org/wiki/Shear_stress
      ]
  }
},
{
  "question": "Can M ever not be equal to 1 at the throat of a channel?",
  "answer": "Yes. In the case that the change in velocity with respect to distance is equal to zero, acceleration is zero through the channel, and M can be not equal to 1 at the throat."
},
{
  "question": "Is Fanno flow an appropriate model for a steady, compressible flow through a long pipe with friction, and loses heat to the pipe through convective heat transfer?",
  "answer": "No. Although the Fanno flow model is valid for steady, compressible flow with friction through long pipes, the flow must also be adiabatic (Q=0) for Fanno flow to be an applicable model. The presence of convective heat transfer indicates that heat Q is non-zero and therefore the flow is not adiabatic. One must also confirm that the area of the duct is constant and assume flow is one-dimensional before applying the Fanno flow model."
},
{
  "question": "Is it possible for an oblique shock or a detached shock to form at the same turning angle?",
  "answer": "Yes. It is possible for an oblique shock or a detached shock to form at a concave corner of the same turning angle given different flow Mach numbers. Flows at lower Mach numbers have lower maximum turning angles, so a lower velocity flow can produce a detached shock going over the same corner that a higher velocity flow would produce an oblique shock going over."
},
{
  "question": "What differentiates Poiseuille flow from Couette flow and what is an example of a situation in which each one could be useful?",
  "answer": "Poiseuille flow is constant pressure gradient driven flow between two stationary plates. One example of a situation in which it could be useful for modeling axisymmetric flow through pipes. In contrast, Couette flow is velocity driven flow between a stationary and a moving plate. It could be useful for modeling for example bearing lubrication."
},
{
  "question": "If one puts a backspinning cylinder in transverse flow, what direction will the resulting lift force be in?",
  "answer": {
      "Due to the Magnus effect, the resulting lift force will be in the upwards direction normal to the flow. This can be seen in the similarity of the pressure gradient and the shape of the streamlines around a cylinder to those of an airfoil with a positive angle of attack.",
      "references":[
          "https://en.wikipedia.org/wiki/Magnus_effect"
      ]
  }
},
{
  "question": "Water having a density of 999 kg/m^3 travels along a curved streamline with a normal acceleration of -5 m/s^2. At a point when the local radius of curvature is 10 m, what is the component of the flows velocity tangent to the streamline and what is the pressure gradient across the streamline?",
  "answer": {
      "code": """
      import numpy as np

      rho = 999 # Density (kg/m^3)
      a_n = -5 # Normal Acceleration (m/s^2)
      R = 10 # Local Radius of Curvature (m)

      # Rearrange acceleration normal to streamline equation
      v_s = np.sqrt((- a_n) * R)

      # Formula for pressure gradient normal to a streamline
      dpdn = rho * (-a_n)

      print("Velocity tangent to streamline:", v_s, "m/s. Pressure gradient accross the streamline:", dpdn, "Pa/m.")
      """,
      "explanation": "This code utilizes the formula for acceleration normal to a streamline and for pressure gradient normal to a streamline. These two formulas can be expressed as a_n = - v_s^2 / R and dp/dn = rho * v_s^2 / R, where 'a_n' is the normal acceleration, 'v_s' is the tangential velocity, 'R' is the local radius of curvature, and 'dp/dn' is the pressure gradient, respectively."
  }
},
{
  "question": "A fluid (gasoline) of density 680 kg/m^3, a kinematic viscosity of 4.6E-7 m^2/s, and a mass flow rate 0.2 kg/s flows through a pipe. Calculate the pressure loss over 10 km of 0.5 m diameter pipe owing to friction.",
  "answer": {
      "code": """
      import numpy as np

      rho = 680 # Density (kg/m^3)
      nu = 4.6 * (10 ** (-7)) # Kinematic Viscosity (m^2/s)
      mdot = 0.2 # Mass Flow Rate (kg/s)
      L = 10000 # Length of Pipe (m)
      D = 0.5 # Diameter of Pipe (m)

      # Determine dynamic viscosity
      mu = nu * rho

      # Determine volumetric flow rate
      Q = mdot/rho

      # Apply Hagen-Poiseuille equation
      delta_p = (8 * mu * Q * L)/(np.pi * ((D/2)**4))

      print("Pressure loss:", delta_p, "Pa")
      """,
      "explanation": "This code first takes kinematic viscosity and mass flow rate, and uses density to calculated dynamic viscosity and volumetric flow rate from them. Next it applies the Hagen-Poiseuille formula delta_p = (8 * mu * Q * L)/(pi * R^4) where 'delta_p' is the pressure loss, 'mu' is dynamic viscosity, 'Q' is volumetric flow rate, 'L' is the length of pipe, and 'R' is the radius of the pipe, respectively. Using this equation it determines the pressure loss over the given length of pipe.",
      "references": [
          "https://en.wikipedia.org/wiki/Hagen-Poiseuille_equation"
      ]
  }
},
{
  "question": "A plate 2 m in length and 5 m in width is submerged in a fluid (water) with a density of 999 kg/m^3, and it is tilted down in such a way that the length edge is at a 20 degree angle with the surface of the fluid. What this the vertical force acting upon the plate. The acceleration due to gravity can be assumed to be 9.8 m/s^2.",
  "answer":{
      "code": """
      import numpy as np

      rho = 999 # Density (kg/m^3)
      L = 2 # Length of plate (m)
      w = 5 # Width of plate (m)
      alpha = 20 # Angle of plate from surface (degrees)
      g = 9.8 # Acceleration due to gravity (m/s^2)

      # The vertical force acting upon the plate is equivalent to the weight of the volume of the fluid above the plate
      F_v = 0.5 * (L**2) * np.cos(alpha * np.pi / 180) * np.sin(alpha * np.pi / 180) * w * rho * g

      print("The vertical force acting on the plate is:", F_v, "N")
      """,
      "explanation": "This code calculates the vertical force acting on a plate submerged in fluid at an angle with the surface of the fluid. It does this by calculating the weight of the fluid above the plate, which is equivalent to the vertical force acting upon the plate. This can be found by multiplying together volume, density, and gravity, or equivalently using the following formula F_v = 0.5 * L * cos(alpha) * L * sin(alpha) * w * rho * g, where 'L' is length of plat, 'w' is width of plate, 'rho' is density of the fluid, and 'g' is acceleration due to gravity."
  }
},
{
  "question": "Calculate the mass flow rate through a convergent nozzle given an inlet stagnation pressure of 1 bar, an inlet stagnation temperature of 300K, a fluid (air) with an isobaric specific heat capacity of 1005 J/kgK, a flow velocity of at Mach 1.5, and a cross section nozzle area of 3 m^2. Assume gamma to be 1.4.",
  "answer": {
      "code": """
      import numpy as np

      p0 = 1 # Inlet stagnation pressure (bar)
      T0 = 300 # Inlet stagnation temperature (K)
      cp = 1005 # Isobaric specific heat capacity (J/kgK)
      M = 1.5 # Mach number
      gamma = 1.4 # Heat capacity ratio
      A = 3 # Area (m^2)

      # Convert inlet stagnation pressure from units of bar to Pascal
      p0 = 100000 * p0

      # Determine the flow capacity (non-dimensional mass flow)
      fmdot = (gamma / np.sqrt(gamma - 1)) * M * ((1 + (((gamma - 1) / 2) * (M**2)))**(-0.5 * (gamma + 1) / (gamma - 1)))

      # Based on the flow capacity, determine the mass flow rate
      mdot = fmdot * A * p0 / np.sqrt(cp * T0)

      print("The mass flow rate is:", mdot, "kg/s")
      """,
      "explanation": "This code determines the flow capacity using the following formula (gamma/sqrt(gamma-1))*M*((1+(((gamma-1)/2)* (M^2)))^(-0.5*(gamma+1)/(gamma-1))), where 'M' represents Mach number and 'gamma' represents heat capacity ratio respectively. Then it calculates the mass flow rate based on the determined flow capacity, recognizing that flow capacity is equal to mdot*sqrt(cp*T0)/(A*p0), where 'mdot' is mass flow rate, 'cp' is isobaric specific heat capacity, 'T0' is inlet stagnation temperature, 'A' is area, and 'p0' is inlet stagnation pressure, respectively." 
  }
},
{
  "question": "A compressible, viscous flow enters a 4 meter diameter pipe at a mach number of 3. The skin friction coefficient is 0.002. What is the length of pipe necessary to choke the flow?",
  "answer": {
      "code": """
      import numpy as np

      D = 4 # Diameter (m)
      M = 3 # Mach number
      gamma = 1.4 # Heat capacity ratio
      cf = 0.002 # Skin Friction coefficient

      # Determine Lmax
      Lmax = (D/(4 * cf)) * (((1 - (M ** 2))/(gamma * (M ** 2)))+(((gamma + 1)/(2 * gamma)) * np.log((((gamma + 1)/2) * (M ** 2))/(1 + (((gamma - 1)/2) * (M ** 2))))))

      print("The length of pipe necessary to choke the flow is:", Lmax, "m")
      """,
      "explanation": "This code uses the formula relating Mach number to 4 * cf * Lmax / D (where 'cf' is skin friction coefficient, 'Lmax' is length from input Mach number required to choke the flow, and 'D' is pipe diameter, respectively) to determine Lmax."
  }
},
{
  "question": "A fluid (water) with a constant density of 999 kg/m^3 flows steadily through a pipe. The initial height is 10 m greater than the final height, and the initial velocity is 5 m/s. There is no pressure change, and acceleration due to gravity can be assumed to be 9.81 m/s^2. Assume not flow friction or viscous effects. What is the velocity at the final condition?",
  "answer":{
      "code": """
      import numpy as np

      rho = 999 # Density (kg/m^3)
      delta_z = 10 # Change in height (z) between the initial and final condition (m)
      v1 = 5 # Initial Velocity (m/s)
      delta_p = 0 # Change in pressue (p) between the initial and final condition (Pa)
      g = 9.81 # Acceleration due to gravity (m/s^2)

      # Apply Bernoulli's principle
      v2 = np.sqrt(2 * (delta_p + (rho * g * delta_z) + (0.5 * rho * (v1**2)))/rho)

      print("The velocity at the final condition is:", v2, "m/s")
      """,
      "explanation": "This code applies Bernoulli's equation, which states that p + (rho * g * z) + (0.5 * rho * v^2) = constant, where 'p' is pressure, 'rho' is density, 'g' is acceleration due to gravity, and 'v' is velocity, respectively, to determine the final velocity in the pipe. Bernoulli's equation can be validly applied because the flow is steady, incompressible and inviscid."
      "references": [
          "https://en.wikipedia.org/wiki/Bernoullis_principle"
      ]
  }
},
{
  "question": "Calculate the momentum flux of a fluid with density 400 kg/m^3 flowing through a pipe with velocity profile v(r) = V0 * (1 - (2 * (r/R)^3))  where the pipe radius R = 2 m, and the center line velocity V0 = 1 m/s.",
  "answer":{
      "code": """
      import numpy as np

      rho = 400 # density (kg/m^2)
      R = 2 # pipe radius (m)
      V0 = 1 # center line velocity (m/s)

      # Apply momentum flux equation
      mdot_v = (2/5) * np.pi * rho * (V0 ** 2) * (R ** 2)

      print("The momentum flux is:", mdot_v, "N")
      """,
      "explanation": "This code evaluates the integral of rho * v(r)^2 * 2pi * r dr from 0 to R in order to determine the momentum flux, where 'rho' is density, 'v(r)' is the velocity profile specified in the question, and 'R' is the pipe radius."
  }
},
{
  "question": "Plot a graph of area over throat area vs. Mach number for Mach numbers 0.1 to 3 where heat capacity ratio gamma is 1.4.",
  "answer":{
      "code": """
      import numpy as np
      import matplotlib.pyplot as plt

      gamma = 1.4 # Heat capacity ratio
      M = np.linspace(0.1,3,100) # Mach number
      AoverAstar = (((gamma + 1)/2) ** (- (gamma + 1)/(2 * (gamma - 1)))) * (((1 + (((gamma - 1)/2) * (M ** 2))) ** ((gamma + 1)/(2 * (gamma - 1))))/M)

      plt.plot(AoverAstar,M)
      plt.xlabel('A/A*')
      plt.ylabel('M')
      plt.show()
      """,
      "explanation": "This code uses the relationship between area over throat area and Mach number to generate the desired graph."
  }
},
{
  "question": "Plot a graph of dimensionless impulse function (F / mdot*sqrt(cp*T0)) for Mach numbers 0.5 to 10 where heat capacity ratio gamma is 1.4.",
  "answer":{
      "code": """
      import numpy as np
      import matplotlib.pyplot as plt

      gamma = 1.4 # Heat capacity ratio
      M = np.linspace(0.5,10,100) # Mach number

      dimensionless_impulse_function=(((1 + (((gamma - 1)/2) * (M**2)))**(gamma/(gamma - 1))) ** (-1)) * (((gamma / np.sqrt(gamma - 1)) * M * ((1 + (((gamma - 1)/2) * (M**2)))**(-0.5 * (gamma + 1)/(gamma - 1))))**(-1)) * (1 + (gamma * (M ** 2)))

      plt.plot(M, dimensionless_impulse_function)
      plt.show()
      """,
      "explanation": "This code uses the relationship between dimensionless impulse function and Mach number to generate the desired graph."
  }
},
{
  "question": "Given a constant initial temperature T1 = 290 K, graph the resulting stagnation temperature for Mach numbers 0.5 through 5. It may be assumed that the heat capacity ratio gamma is 1.4.",
  "answer":{
      "code": """
      import numpy as np
      import matplotlib.pyplot as plt

      gamma = 1.4 # Heat capacity ratio
      M = np.linspace(0.5,10,100) # Mach number
      T1 = 290 # Initial temperature (K)

      T01 = T1 * (1 + (((gamma - 1)/2) * (M ** 2)))

      plt.plot(M, T01)
      plt.show()
      """,
      "explanation":  "This code uses the relationship between the ratio of stagnation temp (T01) over temperature (T1) and Mach number (M) to produce the desired graph."
  }
},
]