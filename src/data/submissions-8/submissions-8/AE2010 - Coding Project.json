[
{
    "question": "Consider a steady, incompressible flow through a horizontal pipe with a diameter of .1 meter, and with a length of 10 meters. The fluid has a viscosity of μ = 0.001 Pa*s and a density of ρ = 1000 kg/m^3. If the volumetric flow rate through the pipe is .01 m^3/s, calculate the pressure drop along the pipe resulting from the viscous effects.",
    "answer": {
        "code": """
  import numpy as np
  
  # Given values
  
  D = 0.1 # Pipe diameter (m)
  L = 10 # Pipe length (m)
  mu = 0.001 # Viscosity (Pa*s)
  rho = 1000 # Density (kg/m^3)
  Q = 0.01 # Volumetric flow rate (m^3/s)
  A = 3.14 * (D/2)**2 # Cross-sectional area of the pipe
  
  # Calculations
  
  # Mean velocity
  V = Q/A
  # Delta P
  delta_p = (8 * mu * L * Q) / (3.14 * (D / 2)**4)
  
  print('Pressure drop along the pipe:', round(delta_p,2), 'Pa')
    """,
        "explanation": "To find the pressure drop along a pipe. The Navier-Stokes equation can be used. This assumes steady, incompressible flow through a circular pipe. With these assumptions, the equation is simplified to the Hagen-Poiseuille equation. This code uses a reduced version of the Navier-Stokes equation for steady, incompressible, flow, the Hagen-Poiseuille equation. The Hagen-Poiseuille equation uses the principle of conservation of mass and a no-slip condition for pipe walls. To relate pressure drop and volumetric flow rate. Using the given values, pipe diameter, pipe length, viscosity, density, and volumetric flow rate, the code computes the pressure drop.",
    }
},
{
    "question": "A supersonic wind tunnel test consists of a scale model of an aircraft-mounted for testing. The air in the wind tunnel is supplied from a high-pressure reservoir. The flow around the model is maintained at a high subsonic speed. A pitot tube is mounted near the model and measures a stagnation pressure of 400 lb/ft^2. Given the wind tunnel is operating at a standard altitude of 36000 ft, find the velocity and temperature of the airflow around the model. Assume isentropic flow over the model, and assume that the wind tunnel has an ambient pressure and temperature.",
    "answer": {
        "code": """
  # Given
  p = 19152  # Pressure at measurement point (Pa)
  p_inf = 476  # Ambient pressure at 36,000 ft (lb/ft^2)
  T_inf = 391 # Ambient Temperature at 36,000 ft (R)
  gamma = 1.4  # Ratio of specific heats
  
  # Conversions
  p_inf = 476 * 47.88025
  T_inf = 391 * (5/9)
  
  # Isentropic relation between static conditions at measurement point
  T = T_inf * (p / p_inf)**((gamma - 1) / gamma)
  
  print("Model temperature at the measurement point", round(T,2), "R")
  
  """,
        "explanation": "Procedure: To find the model temperature at the given point on the model, the isentropic relations must be used between the stagnation condition and the static conditions. The values will need to be converted to proper units. Values for p-infinity and T-infinity will need to be obtained from a Standard Atmosphere table. The isentropic flow relation can then be used to calculate the static temperature at the measurement point. Explanation: This code uses the isentropic flow relations to calculate the temperature at a specific point on a model. To do this values of freestream ambient temperature and pressure need to be used. After locating those values on a Standard Atmosphere table, the code calculator T using T = T_inf * (p / p_inf)**((gamma - 1) / gamma) where p = Pressure at the measurement point, p_inf = Ambient Pressure, T_inf = Ambient Temperature, and gamma = Ratio of specific heats.",
    }
},
{
    "question": "An insulated tank initially contains 5 kg of air at 20 C and 100 kPa. Heat is transferred to the air after a heating element is turned on. The air is heated until it reaches a pressure of 120 kPa. Find the final pressure in the tank, and the amount of heat transfer required to achieve the final state.",
    "answer": {
        "code": """
  # Given
  m = 5 / 1000  # Mass of air (kg)
  T1 = 20  # Initial temperature (C)
  P1 = 100  # Initial pressure (kPa)
  P2 = 120 # Initial pressure (kPa)
  
  # Conversion
  T1 = 20 + 273.15 
  # Using the ideal gas law
  T2 = T1 * (P2 / P1)  # Final pressure (kPa)
  
  print("Final pressure:", round(T2,2), "kPa")
  
  # Specific heat capacity of air at constant volume (kJ/kg-K)
  cv = 0.718
  
  # Heat transfer (kJ)
  Q = m * cv * (T2 - T1)
  
  print("Heat transfer:", round(Q,2), "kJ")
  
  """,
        "explanation": "Procedure: An insulated tank contains air at a known state. When heat is transferred to the air, the tank state becomes unknown. Using the ideal gas law, and Gay-Lussac’s law, the final pressure will be calculated. The heat transfer can then be calculated using the first law of thermodynamics. Explanation: This code first calculates the final temperature using the ideal gas law (T2/T1 = P2/P1), which assumes a constant mass and volume. The heat transfer can then be calculated using this newly acquired temperature (Using Q = m*C*delta-T). Assuming the heat transfer from the walls is negligible, these values can be calculated.",
    }
}, 
{
    "question": "What is the difference between the Newtons and Eulerian representations of the material derivative? How is this difference exhibited in their respective formulas?",
    "answer": {
        "explanation":"The material derivative is a derivative that describes the time rate of change of a fluid parcel quantity. This quantity is observed by an observer moving with the fluid, along the path line. 
  
  The Newtonian representation of the material derivative follows the motion of individual fluid particles. These individual particles have properties that are tracked as they move through time and space. It is expressed as
  
  D/Dt = ∂/∂t + u * ∇
  u is the velocity vector
  ∇ is the spatial gradient operator
  
  The Eulerian representation of the material derivative is based on a fixed frame of reference. It describes the rate of change of fluid properties at fixed points in space. This occurs as a fluid flows through and past points. It is expressed as:
  
  ∂/∂t + u · ∇
  
  The difference between the two is the frame of reference. The Newtonian representation follows individual fluid blobs, while the Eulerian representation examines fixed locations. The Newtonian representation is best for tracking trajectories, while the Eulerian representation is best for analyzing flows of fixed geometries.
  ",
        "references": [
    “https://en.wikipedia.org/wiki/Material_derivative”
        ]
    }
},
{
    "question": "What are the key differences between Poiseuille flow and Couette flow? What are the practical applications of each type of flow?",
    "answer": {
        "explanation":"Poiseuille flow refers to the pressure-driven flow of a viscous fluid through a pipe with constant cross-section. The velocity profile of Poiseuille flow is parabolic, with the maximum velocity occurring at the centerline, and the minimum velocity (0 velocity) occurring alongside walls. This is a result of the new slip condition. It is important to note that the walls are stationary. Poiseuille is commonly seen in blood flow in vessels.
  
  Couette flow refers to the pressure-driven flow of a fluid, where one plate is stationary and the other is moving at constant velocity. The velocity profile of Couette flow is linear, with the maximum velocity occurring alongside the moving plate, and minimum velocity (0 velocity) occurring alongside the stationary plate. Couette flow is seen in the wind-driven flow in a body of water.
  
  It is important to note that Couette and Poiseuille flow can be combined to either form a favorable pressure gradient or an adverse pressure gradient.
  ",
    "references": [
      "https://ocw.mit.edu/courses/2-25-advanced-fluid-mechanics-fall-2013/1a114d602956fa0dd328155f9b45f93d_MIT2_25F13_Couet_and_Pois.pdf",
      "https://en.wikipedia.org/wiki/Couette_flow"
    ]
    }
},
{
    "question": "For incompressible flow, how does the advection operator explain the transport of a scalar quantity by the vector field? Explain the governing equations.",
    "answer": "The advection operator (u ⋅ ∇) represents the rate of change of a scalar quantity due to transport by the vector field in incompressible flow. Specifically, it represents the rate of change of height (based on the topology of the field) given velocity. This value is given as (v ⋅ ∇) h or v⋅ (∇h). Both of these values are equivalent, but the former is the more widely used. The operator can be expanded to vx(∂( )/∂x) + vy(∂( )/∂y) + vz(∂( )/∂z) in three dimensions of v. The advection operator accounts for the spatial variation of the scalar quantity as it undergoes the flow. Physically, the operator describes how the scalar quantity is swept along by the fluid motion."
},
  
{
    "question": "For incompressible flow. What is divergence and what is the physical significance of the divergence of the velocity field?",
    "answer": "The divergence of the velocity field (∇ · v) produces a scalar field equal to the net flux of the field out of each point in space. The net flux is the total amount of something flowing out of a closed surface. Simply, the divergence determines the direction a vector field is flowing. If (∇ · v) > 0, the vector field is flowing outwards. If (∇ · v) < 0 it is flowing inward. If the divergence is 0, it signifies that there is no net flow at that point. In other words, the amount flowing in is the same as the amount flowing out. Although written similarly to the advection operator, divergence holds a distinctively different meaning. Expanded, it can be written as (∂(vx)/∂x) + (∂(vy)/∂y) + (∂(vz)/∂z) in three dimensions of v."
},
  
  
{
    "question": "What are the differences between hydrostatic pressure, static pressure, stagnation pressure, and dynamic pressure? What are their governing equations?",
    "answer": {
        "explanation":"Hydrostatic pressure (Ph) is the pressure exerted on a fluid blob due to gravity. It is represented by ρgh or density*acceleration due to gravity*height.
  
  Stagnation pressure (p0) is the pressure that would be obtained if a flow were brought to rest without any loss of mechanical energy (and occurring isentropically). Measured using a Pitot tube, stagnation pressure represents the total pressure energy of the flow, which includes both static and dynamic pressure components.
  
  Static pressure (P) is the pressure a fluid exerts at rest or the pressure experienced by a fluid element as it moves along a streamline at the local flow velocity. It represents the purely random motion of the molecules in the flow and acts perpendicular to the flow direction. In other words, static pressure is the pressure that would be measured by a pressure gauge moving with the fluid flow.
  
  Dynamic pressure is the difference between stagnation and static pressure. It represents the pressure resulting from the kinetic energy of the fluid flow. It is represented by  ½ ρV2.
  
  The following equation can be used to combine static, dynamic, and stagnation pressure.
  P + ½ ρv² = P₀ 
  (static pressure + dynamic pressure = stagnation pressure)
  
  Bernoulli's equation can be used to show the relationship between 
  P + ½ ρv² + ρgh = C
  (static pressure + dynamic pressure + hydrostatic pressure = constant)
  
  ",
    "references": [
      "Fundamentals Part 1, Chapter 3 Fundamentals of Inviscid, Incompressible Flow - Fundamentals-of-aerodynamics"
    ]
  }
},  
  {
    "question": "How does the concept of entropy generation relate to irreversibilities present in thermodynamics processes? What are some practical implications?",
    "answer": {
        "explanation": "Entropy is the measure of molecular disorder or randomness in a system. It is the unavailability of a system’s energy to perform useful work. The second law of thermodynamics asserts that the change in entropy in an isolated system cannot be less than 0. This increase in entropy is a result of irreversibilities, which are less-than-ideal behaviors arising from various sources. This includes heat transfer across finite temperature differences, friction, viscosity, and other processes.
  
  The practical implications of entropy and irreversibilities are extraordinary. Specifically, for thermal management systems, such as HVAC, and industrial processes, irreversibilities can create temperature control challenges. Irreversibilities can cause issues such as heat dissipation and thermal pollution. Minimizing entropy, through optimizing heart transfer, and reducing friction, can thus be critical for maintaining energy efficiency, and optimizing environmental sustainability. This is evident in a company such as Coolbrook.
  
  ",
    "references": [
      "https://ocw.mit.edu/courses/5-60-thermodynamics-kinetics-spring-2008/resources/lecture-10-entropy-and-irreversibility/",
      "https://web.mit.edu/16.unified/www/FALL/thermodynamics/notes/node48.html"
    ]
  }
},
{
    "question": "What is the Zeroth law of thermodynamics and what justifies its crucial inclusion into the framework of thermodynamics alongside other laws?",
    "answer": {
        "explanation":"The zeroth law is fundamental in governing the behavior of heat and temperature. The law provides an independent definition of temperature which is distinct from the concept of entropy in the second law. The Zeroth law asserts that if two thermodynamic systems are both in thermal equilibrium with a third system, they are also in thermal equilibrium with each other. Bodies in thermal equilibrium must have the same common property, which is defined as temperature. 
  
  Historically, the zeroth law was a necessary fundamental assertion because the first, second, and third laws had already been widely recognized. However, there was a crucial gap in the first three laws: temperature lacked an independent definition. The Zeroth law established a consistent framework for understanding heat transfer by explicitly defining temperature and thermal equilibrium. Without it, the “collapse of thermodynamics” would result.
  ",
    "references": [
      "https://en.wikipedia.org/wiki/Zeroth_law_of_thermodynamics",
      "https://techiescience.com/zeroth-law-of-thermodynamics/"
    ]
  }
},
{
    "question": "Why can the principles of continuity, momentum (Euler), and energy be used to form the normal shock relations when shocks appear to be discontinuous in these principles?",
    "answer": {
        "explanation":"The principles of continuity, momentum (Euler), and energy can still be used to derive normal shock relations because a normal shock can be seen as an infinitesimally thin region across which the flow properties change abruptly. The continuity principle ensures that mass is conserved across a shock. The flow rate into the control volume must be equal to the flow rate out. The momentum principle accounts for the conservation of momentum in the flow. The momentum flux must be conserved across a shock. The energy is conserved as no heat is added and there is no work done by the shock. Thus, the total enthalpy and total temperature remain constant. Essentially, what enters the shock surface in the front must come out in the back. However, because the flow is non-isentropic, the stagnation pressure downstream of the shock is always greater than the stagnation pressure upstream. The change in entropy is related to the ratio of total pressures.
  
  With regards to the normal show relations, the principles do not imply that the flow is isentropic. In the derivation, one can simply swap density and velocity, with gamma and mach number. When the flow is compressible, it is advantageous to swap density and velocity with gamma and mach, allowing for normal shock relations to be derived.
  
  ",
    "references": [
      "https://edstem.org/us/courses/52355/discussion/4749609",
      "https://www.grc.nasa.gov/WWW/k-12/airplane/normal.html",
      "https://courses.ansys.com/wp-content/uploads/2020/12/LT3-C2-L2-Handout-Final.pdf",
      "https://www.astro.rug.nl/~weygaert/tim1publication/astrohydro2014/achterberg.ngsa.shockwaves.pdf"
    ]
  }
},
{
    "question": "What is the fundamental mechanism behind the formation of detached shocks and how do they differ from attached shocks?",
    "answer": {
        "explanation":"A detached shock forms when the supersonic flow encounters an object at a high angle of attack, resulting in flow separating from the body’ surface. The detached shock forms upstream of the object, creating a curved wave that is detached from the surface. In contrast, an attached shock forms when the object has a lower angle of attack, or is more streamlined, allowing the flow to remain attached to the surface, creating an oblique shock. A detached shock leads to a region of subsonic flow between the shock and the body, creating higher drag and flow disturbances compared to an attached shock.",
    "references": [
      "https://www.grc.nasa.gov/WWW/k-12/airplane/wdgflow.html",
      "https://onlinelibrary.wiley.com/doi/pdf/10.1002/9783527610105.app3"
    ]
  }
},  
{
    "question": "Air flows through a pipe with a velocity where friction forces are notable. Heat transfer occurs through the pipe wall such that the air temperature inside the pipe remains at a constant 310 K. At point B the pressure is 3.1 bar. At point A in the pipe, the velocity is 290 m/s and the pressure is 3.2 bar. What direction is the flow?",
    "answer": {
        "code": """
  import numpy as np
  
  # Givens
  T = 310  # Temperature (K)
  p_A = 3.2  # Pressure at point A (Pa)
  p_B = 3.1  # Pressure at point B (Pa)
  v_A = 290  # Velocity at point A (m/s)
  
  # Constants
  R = 287  # Specific gas constant for air (J/kg*K)
  
  # Calculate velocity at point B
  v_B = v_A*(p_A/p_B)
  
  # Calculate heat transfer
  q = 0.5*(v_B**2 - v_A**2)
  
  # Calculate entropy change
  delta_s = -R * np.log(p_B/p_A)
  delta_s_irrev = delta_s - (q/T)
  
  if delta_s_irrev < 0:
      print("B is upstream of A")
      print("Velocity at point B:", round(v_B,2), "m/s")
      print("Heat transfer:", round(q,2), "J/kg")
      print("Entropy change:", round(delta_s,2), "J/(kg*K)")
      print("Irreversible entropy change:", round(delta_s_irrev,2) ,"J/(kg*K)")
  else:
      print("B is downstream of A")
      print("Velocity at point B:", round(v_B,2), "m/s")
      print("Heat transfer:", round(q,2), "J/kg")
      print("Entropy change:", round(delta_s,2), "J/(kg*K)")
      print("Irreversible entropy change:", round(delta_s_irrev,2) ,"J/(kg*K)")
  
  """,
        "explanation": "This code calculates the velocity of point B using the given pressure and velocity at point A. The code then calculates the heat transfer and entropy change using SFEE for adiabatic flow, and entropy change equation for isobaric processes. Then the irreversible entropy change is calculated. The irreversible entropy change cannot be negative by definition. Thus, if the irreversible entropy change is negative, the flow is from B to A. If the irreversible entropy change is positive, the flow is from A to B."
    }
},
{
    "question": "Air flows through a converging-diverging nozzle at 20 MPa and 900 K with negligible velocity. The flow is assumed to be steady, one-dimensional, and isentropic. The specific heat ratio is 1.4. At the exit, the Mach number is 2, and the through area is 15 cm^2. Find the throat conditions, the exit plane conditions, and the mass flow rate through the nozzle.",
    "answer": {
        "code": """import numpy as np
  
  # Given
  P_0 = 2000000  # Stagnation pressure (Pa)
  T_0 = 900  # Stagnation temperature (K)
  Ma_e = 2  # Exit Mach number
  A_t = 15*10**-4  # Throat area (m^2)
  k = 1.4  # Specific heat ratio
  R = 287  # Gas constant for air (J/kg.K)
  
  # Calculate stagnation density
  rho_0 = P_0/(R * T_0)
  
  # Throat conditions at Ma = 1 from table
  pt_p0 = .5283
  Tt_T0 = .8333
  rhot_rho0 = .6339
  
  # Throat conditions
  P_t = P_0 * pt_p0
  T_t = T_0 * Tt_T0
  rho_t = rho_0 * rhot_rho0
  # Speed of sound at throat
  V_t = np.sqrt(k * R * T_t)  
  
  # Throat results
  print("Throat conditions:")
  print("Pressure:", round(P_t,2), "Pa")
  print("Temperature", round(T_t,2), "K")
  print("Density:", round(rho_t,2), "kg/m^3")
  print("Velocity:", round(V_t,2), "m/s")
  
  # Exit plane conditions at Ma = 2 from table
  pe_p0 = .1278
  Te_T0 = .5556
  rhoe_rho0 = .2300
  Ae_A0 = 1.6875
  Mat = 1.6330
  # Exit plane conditions
  P_e = P_0 * pe_p0
  T_e = T_0 * Te_T0
  rho_e = rho_0 * rhoe_rho0
  A_e = A_t * Ae_A0
  V_e = Mat * V_t
  
  # Exit plane results
  print("\nExit plane conditions:")
  print("Pressure:", round(P_e,2), "Pa")
  print("Temperature", round(T_e,2), "K")
  print("Density:", round(rho_e,3), "kg/m^3")
  print("Exit area:", round(A_e,4), "m^2")
  print("Velocity:", round(V_e,2), "m/s")
  
  # Mass flow rate
  mdot = rho_t * A_t * V_t
  print("Mass flow rate:", round(mdot,2), "kg/s")
  
  """,
        "explanation": "This code calculates the flow properties, and mass flow rate at the throat and exit plane of a converging diverging nozzle, given inlet stagnation conditions, exit mach number, and throat area. The assumptions are as follows: 1) Air is an ideal gas with constant specific heat at room temperature. 2) Flow through the nozzle is steady, one-dimensional, and isentropic. The code begins by calculating the stagnation density using the ideal gas equation. To find throat conditions, the code uses the isentropic relations for a normal shock at the throat (M=1). Using table values the ratios of throat-to-stagnation pressure, temperature, and density are found and then used to calculate throat pressure, temperature, density, and the speed of sound. The same process is completed for the exit plane conditions, except table values are retrieved for an oblique shock with exit mach number of 2. The ratios are used to calculate exit plane pressure, temperature, density, exit area, and velocity. Finally, the code calculates the mass flow rate using the continuity equation for the throat conditions.",
        "references": [
            "Thermodynamics An Engineering Approach Example 17-7"
        ]
    }
}, 
{
    "question": "Water in a large lake is being used to generate electricity through the use of a hydraulic turbine generator. This generator is located where the depth of the water is 100 m. Water is being supplied into the turbine at a rate of 7000 kg/s. If the electrical power generated is measured to be 1955 kW, and the generator has an efficiency of 95%, find the overall efficiency of the turbine, the mechanical efficiency of the turbine, and the shaft work provided by the turbine into the generator.",
    "answer": {
        "code": """# Given
  m_dot = 7000  # Mass flow rate (kg/s)
  h = 100  # Depth of water (m)
  P_elect = 1955   # Electric power generated (kW)
  eta_gen = 0.95  # Generator efficiency
  g = 9.81  # Acceleration due to gravity (m/s^2)
  rho = 1000  # Density of water (kg/m^3)
  
  # Overall efficiency of turbine-generator
  e_mech_in = g * h / (1000 * rho) 
  e_mech_fluid = m_dot * e_mech_in 
  n_overall = P_elect / e_mech_fluid
  print("Overall efficiency of the turbine-generator:", round(n_overall,2))
  
  # Mechanical efficiency of turbine
  n_turbine = n_overall / eta_gen
  print("Mechanical efficiency of the turbine:", round(n_turbine,3))
  
  # Shaft power supplied by turbine
  P_shaft = e_mech_fluid * n_turbine
  print("Shaft power supplied by the turbine:", round(P_shaft,2), "kW")
  
  """,
        "explanation": "This code finds the overall efficiency of the turbine generator by calculating the mechanical energy input rate and dividing the electrical power generated by it. The code then calculates the mechanical efficiency of the turbine by dividing the overall efficiency by the generator efficiency. Finally, the shaft power provided by the turbine to the generator is calculated by multiplying the mechanical energy input rate by the turbine's mechanical efficiency.",
        "references": [
            "Thermodynamics An Engineering Approach Example 2-16"
        ]
    }
},
{
    "question": "A piston cylinder contraption initially contains .6 m^3 of nitrogen gas at 31 C and 500 kPa. An electric heater inside the contraption is turned on and allowed to pass a current of 3 Amps for 2.5 minutes from a 240 Volt source. The Nitrogen gas expands at constant pressure, and produces a heat loss of 2950 J. Find the final temperature of the nitrogen.",
    "answer": {
        "code": """# Given
  P1 = 500*10**3  # Initial pressure (Pa)
  V1 = 0.6  # Initial volume (m^3)
  T1 = 31+273.15  # Initial temperature (K)
  Vo = 240 # Voltage of source (V)
  I = 3 # Current of source (A)
  Q_loss = 2950  # Heat loss (J)
  R = 297  # Gas constant for nitrogen (J/kg*K)
  cp = 1039  # Specific heat capacity of nitrogen at room temperature (J/kg*K)
  mins = 2.5 # Minutes electric heater on (mins)
  
  # Calculate electrical work done on nitrogen
  W_e = Vo*I*mins*60
  
  # Calculate the mass of nitrogen
  m_n = P1*V1/(R*T1)
  
  # Energy balance equation
  Left_Side = W_e - Q_loss
  Right_Side = m_n*cp
  
  # Solve for the final temperature T2
  T2 = (Left_Side/Right_Side) + T1
  
  # Results
  print("Electrical work done on nitrogen:", round(W_e / 1000,2), "kJ")
  print("Mass of nitrogen:", round(m_n,2), "kg")
  print("Final temperature of nitrogen:", round(T2 - 273.15,2), "C")
  
  """,
        "explanation": "The assumptions are as follows 1) Nitrogen is an ideal gas 2) The system is stationary and thus the kinetic and potential energy changes are zero 3) The pressure remains constant during the process 4) Nitrogen has constant specific heats at room temperature
  
  This code finds the final temperature of nitrogen gas in a piston cylinder device, heated by an electric resistance heater. The code first calculates the electrical work done on the nitrogen. Next, the code calculates the mass of nitrogen using the ideal gas equation. Using the energy balance equation, the code then equates net energy transfer to the change in enthalpy of the gas. After rearranging the equation, the final temperature of the nitrogen gas can be found.",
        "references": [
            "Thermodynamics An Engineering Approach Example 4-9"
        ]
    }
},
{
    "question":"Using matplotlib and numpy, create a plot to iIllustrate the T-s Diagrams for a perfect gas with constant pressure, constant volume, constant enthalpy, and reversible and adiabatic.",
    "answer":{
        "code": """
  import matplotlib.pyplot as plt
  import numpy as np
  
  # Specific heat capacities
  cp = 1.005
  cv = 0.718
  
  # Entropy range
  s = np.linspace(0, 2.5, 100)
  
  # Calculate entropy for constant pressure and constant volume processes
  entropy_cp = np.exp(s / cp)
  entropy_cv = np.exp(s / cv)
  
  # Reference temperature for constant enthalpy line
  T_ref = entropy_cp[0]  
  
  # Plotting Constant Pressure and Constant Volume
  plt.figure(figsize=(8, 6))
  plt.plot(s, entropy_cp, label='Constant Pressure', color='g', linestyle='--')
  plt.plot(s, entropy_cv, label='Constant Volume', color='b', linestyle='--')
  
  # Constant enthalpy 
  plt.axhline(y=T_ref, color='r', linestyle='--', label='Constant Enthalpy')
  
  # Reversible and adiabatic
  s_adiabatic = 0  # Choose entropy value
  plt.axvline(x=s_adiabatic, color='k', linestyle='--', label='Reversible and Adiabatic')
  
  plt.xlabel('Entropy (s)')
  plt.ylabel('Temperature (T)')
  plt.title('T-s Diagram for a Perfect Gas')
  plt.legend()
  plt.xticks(ticks=[], labels=[])
  plt.yticks(ticks=[], labels=[])
  plt.show()
  
  
  """,
        "explanation": "This code generates T-ds diagrams for a perfect gas showing constant pressure and constant volume processes, constant enthalpy, and reversible and adiabatic processes. The diagram thus shows the relationship between temperature and entropy showing a gas’s behavior under varying conditions.",
  }
},
{
    "question": "In python generate a plot that illustrates the changes in magnitudes of subsonic and supersonic velocity vectors along a streamline traveling through a throat/confined area.",
    "answer": {
        "code": """
  import matplotlib.pyplot as plt
  import numpy as np
  from matplotlib.cm import ScalarMappable
  
  # Choose between subsonic and supersonic
  Flow_is = "subsonic"
  
  # Define the functions
  def func1(x):
    return np.exp(-(x)**2) - 1.1
  
  def func2(x):
    return -np.exp(-(x)**2) + 1.1
  
  # Create the x-axis values
  x = np.linspace(-3, 3, 40)  # 40 points between -3 and 3
  
  # Calculate the y-axis values for each function
  y1 = func1(x)
  y2 = func2(x)
  area = (y1 - y2) * 1
  
  if Flow_is != "subsonic":
      flow = "supersonic"
      area = -area
      title = 'Velocities of Supersonic Flow Through Confined Area'
  else:
      title = 'Velocities of Subsonic Flow Through Confined Area'
  
  # Create a colormap for arrow colors based on area
  cmap = plt.cm.viridis  
  norm = plt.Normalize(min(area), max(area))  
  colors = cmap(norm(area))  
  
  # Plot the functions
  plt.fill_between(x, y1, y2, color='skyblue', alpha=0.5)
  plt.quiver(x, np.zeros_like(x), area, np.zeros_like(x), angles=0, scale=10, scale_units='width', color=colors)
  
  # Add colorbar for legend
  sm = ScalarMappable(cmap=cmap, norm=norm)
  sm.set_array([])
  colorbar = plt.colorbar(sm, label='Increasing Velocity', format='')  
  colorbar.set_ticks([]) 
  
  # Add labels and title
  plt.title(title)
  plt.tick_params(bottom=False, left=False, labelbottom=False, labelleft=False)
  plt.show()
  
  """,
        "explanation": "This code generates a plot that shows the velocities of either subsonic or supersonic flow through a confined area. The code uses defined function for flow profile, and colors to indicate magnitude of velocity.",
  }
},
{
    "question": "In python generate a plot that shows the effective area due to friction in Fanno flow. Take the perspective of a person looking into a pipe experiencing Fanno flow.",
    "answer": {
        "code": """
  import numpy as np
  import matplotlib.pyplot as plt
  
  def throat_shape(x, y):
      # Define a function that describes the throat shape
      return np.exp(-x**2 - y**2)
  
  # Generate x and y values
  x = np.linspace(-2, 2, 100)
  y = np.linspace(-2, 2, 100)
  X, Y = np.meshgrid(x, y)
  
  # Calculate throat shape values
  Z = throat_shape(X, Y)
  
  # Create filled contours for visualization
  plt.contourf(X, Y, Z, cmap='Blues')
  plt.title('Effective Area Due to Friction In Fanno Flow\n Looking into a pipe')
  plt.xlabel('Distance from the middle')
  plt.ylabel('Distance from the middle')
  cbar = plt.colorbar(label='Stacked Effective Areas',format='')
  
  plt.tick_params(bottom=False, left=False, labelbottom=False, labelleft=False)
  plt.gca().set_aspect('equal', adjustable='box')
  plt.show()
  
  """,
        "explanation": "This code generates a visualization of the effective area due to friction in Fanno flow, within a pipe. It uses contours to show area distribution through the pipe.",
  }
},
{
    "question": "In python generate a plot that illustrates velocity vectors of a flow exiting a pipe.",
    "answer": {
        "code": """
  import numpy as np
  import matplotlib.pyplot as plt
  
  # Preplotting
  x = np.linspace(-1, 1, 20)
  y = np.linspace(-1, 1, 20)
  X, Y = np.meshgrid(x, y)
  
  # Define velocity functions
  vel_X = 4*X
  vel_Y = 4*Y
  dvel_dX = 10*X + 10*Y
  dvel_dY = 10*X + 10*Y
  vel_mag = np.sqrt(vel_X**2 + vel_Y**2)
  
  # Plotting  velocity field
  fig = plt.figure(figsize=(8,4))
  c = plt.contourf(X, Y, vel_mag, 30)
  plt.quiver(X, Y, vel_X, vel_Y, color='w')
  plt.colorbar(c)
  plt.title(r'Velocity, $\mathbf{v}$')
  plt.xlabel('x')
  plt.ylabel('y')
  plt.show()
  
  
  """,
        "explanation": "This code illustrates a velocity field where all vectors are pointing outward from a circular pipe. The plot uses contours and vectors lengths to show behavior of flow exiting the pipe in 2D space.",
  }
},
] 