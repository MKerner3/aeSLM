[
  {
    "question": "Why is cavitation typically detrimental to liquid fluid systems, and why are cavitating venturis not subject to these issues?",
    "answer": "Cavitation occurs when local static pressure in a liquid is reduced below the vapor pressure of said fluid, causing vapor bubbles to form and nearly immediately collapse, causing violent pressure waves. These pressure waves can cause erosion, generate significant noise, and increase peak stresses which can damage equipment. Cavitating venturis are not subject to these issues because the cavitation is localized to an area near the throat, where geometry and material choices are optimized to counteract detrimental effects. Essentially, it boils down to an issue of control. Cavitation that does not suit a particular purpose is undesirable, but when it is useful, engineers optimize designs to mitigate issues.",
    "explanation": "",
    "reference": ""
  },
  {
    "question": "Supersonic wind tunnels contain diffusers to slow down exiting fluid flow. Unlike nozzles, which usually have a smooth shift from convergent to divergent geometry, supersonic diffusers often transition between converging and diverging geometry using a constant area pipe. Why?",
    "answer": "Shock waves in pipes typically occur due to changes in cross-sectional area and geometry causing streamlines to turn into or away from one another, causing oblique shocks and expansion fans, respectively. Keeping area and geometry constant allow oblique shocks from the contracting geometry to reflect and weaken gradually, encouraging laminar flow, reducing the risk of turbulence and high-intensity shocks. Also, practically, pipes are significantly easier to machine due to cylindrical symmetry, making designs more cost-effective.",
    "explanation": "",
    "reference": ""
  },
  {
    "question": "How are Euler's equations modified to generate the Navier-Stokes equations for fluid flow?",
    "answer": "An additional viscosity term is introduced into the Newtonian equations for material derivative of flow, contributing to the addition of a term equal to the viscosity multiplied by the Laplacian of the velocity field. This makes the equations of motion significantly more complex, and is partially responsible for why the Navier-Stokes equations are both difficult and significant enough to justify their spot as a Millenium Problem.",
    "explanation": "",
    "reference": ""
  },
  {
    "question": "A Pitot tube measures stagnation pressure when directly facing fluid flow, but measures static pressure orientated away from fluid flow. Explain why the optimal configuration to measure static pressure is perpendicular to fluid flow, and how pitot tubes have to be modified for the supersonic regime.",
    "answer": "Ideally, the Pitot tube would still measure static pressure at any angle away from fluid flow. However, in practice, other angles besides perpendicular place the opening further downstream from the pipe geometry and can induce flow separation or turbulence which may alter the fluid velocity field and affect the accuracy of pressure readings. In the supersonic regime, the setup does not need to be altered besides for structural integrity. However, we must modify our analysis of the measurements, as in supersonic flow a Pitot tube will generate a bow shock in front that will reduce the stagnation pressure and give inaccurate readings about the general flow.",
    "explanation": "",
    "reference": ""
  },
  {
    "question": "What is enthalpy and why is it useful for constant pressure processes?",
    "answer": "Enthalpy can be thought of as the sum of internal energy of a system and work required to establish that system's physical dimensions from an initial zero volume to a final volume at constant pressure. This quantity is useful for constant pressure processes because for perfect gasses at constant pressure, change in enthalpy is linear with change in temperature. Also, since enthalpy represents a Legendre transformation such that pressure is a variable, i.e. E(S,V) becomes H(S,P), constant pressure simplifies the description of energy transfer to one degree of freedom when enthalpy is used.",
    "explanation": "",
    "reference": ""
  },
  {
    "question": "What is the material derivative in the Eulerian description and why is the Eulerian description more useful for control volumes?",
    "answer": "The material derivative in the Eulerian description is the sum of the advection and time derivative operators. Advection describes changes in a value due to movement, whereas the time derivative describes generation or removal due to all other factors. This description is more useful for control volumes because control volumes impose conservation of mass and hence we often analyze them from the perspective of steady-state flow. This nullifies the time derivative and allows us to focus on advection alone. The Eulerian perspective also allows us to calculate in a static universal reference frame which makes calculus far less cumbersome.",
    "explanation": "",
    "reference": ""
  },
  {
    "question": "Under what circumstances are streamlines and pathlines the same?",
    "answer": "Streamlines are tangent to fluid velocity at any given time based on absolute position. Pathlines are the trajectories of individual particles. The velocity of any given particle will be tangent to its pathline at any given time, but in unsteady fluid flow the pathline of a particle marks a history of fluid velocity, whereas streamlines are always current. Hence, streamlines and pathlines are identical only when flow is steady, and hence the present is the same as the history.",
    "explanation": "",
    "reference": ""
  },
  {
    "question": "In Fanno flow, why can friction cause fluid flow to accelerate?",
    "answer": "Friction with the pipe walls causes a loss of mechanical energy, increasing fluid entropy while decreasing stagnation pressure along the duct length. For a calorically perfect gas, entropy is maximized at Mach 1, so regardless of the fluid velocity, it will approach the speed of sound as it moves along the duct. The boundary layers formed due to the friction result in a virtual narrowing of the pipe, intuitively requiring a fluid velocity increase for subsonic flow.",
    "explanation": "",
    "reference": ""
  },
  {
    "question": "Why does viscosity change differently under temperature variation for gasses compared to liquids?",
    "answer": "Viscosity increases with temperature for gasses but decreases with temperature for liquids. In gasses, the mean free path of particles is much greater and momentum transfer is largely a function of molecular speed, which is a function of temperature. Hence for hotter gasses, viscosity increases. In liquids, molecules are constrained by bonds which enhance momentum transfer. While there is no systematic microscopic theory for liquid viscosity, increased temperature makes particles more likely to overcome the attractive forces of bonds and hence reduce momentum transfer, thus reducing viscosity.",
    "explanation": "",
    "reference": ""
  },
  {
    "question": "A pipe bends 90 degrees. All cross-sections perpendicular to fluid flow are circular, but of variable area. The initial cross sectional area is 0.1m^2, but decreases gradually towards the end of the bend to 0.05m^2. The velocity is 10m/s at the inlet with a pressure of 200kPa gauge, and you can take the density of water to be 1g/mL. Calculate the magnitude of the pressure forces acting parallel and perpendicular to the initial direction of fluid flow entering the bend.",
    "answer": "\n    A_1 = 0.1 # m^2\n    v_1 = 10 # m/s\n    A_2 = 0.05 # m^2\n    v_2 = v_1 * A_1 / A_2 # m/s\n    rho = 1000 # kg/m^3\n    p_1 = 200000 # Pa\n    p_2 = p_1 - 0.5 * rho * (v_2**2 - v_1**2) # Pa\n    F_para = p_1 * A_1\n    F_perp = p_2 * A_2\n    print(f'The perpendicular force magnitude is: {F_perp}N')\n    print(f'The parallel force magnitude is: {F_para}N')\n            ",
    "explanation": "We can assume incompressible flow. Since the area at the exit is halved, velocity must be doubled. We can then use Bernoulli's equation to calculate the exit pressure as 50kPa gauge. Finally, we calculate the pressure forces. Note that there are also momentum forces due to momentum fluxes through the control volume.",
    "reference": ""
  },
  {
    "question": "Taylor-Couette flow is Couette flow between two infinitely long coaxial cylinders. The inner cylinder has a radius R and rotates at a constant angular velocity omega. The outer cylinder has radius 2R but does not rotate. Assuming the angular velocity is sufficiently slow as for the flow to be approximately laminar, the flow is incompressible, and being given the azimuthal velocity as v(r)=4/3*omega*R^2/r-1/3*w*r, calculate kinetic energy stored in a length L of the pipe. Then, use values L=2m, R=3m, w=0.5Hz, and calculate the value numerically.",
    "answer": "\n    import numpy\n    omega = 0.5 # Hz\n    L = 2 # m\n    R = 3 # m\n    KE = 14 * numpy.pi / 27 * L * omega**2 * R**3\n    print(f'The total kinetic energy in this section of pipe is {KE/numpy.pi}pi J = {round(KE, 2)}J.')\n            ",
    "explanation": "Differential contributions to the kinetic energy can be expressed as 0.5*rho*v^2, where v is the velocity at a point in the fluid field and rho is the uniform density. We can then integrate over the section of pipe in cylindrical coordinates to sum over these differential contributions and calculate the total kinetic energy. The integral works out to KE = 14pi/27 * L * omega^2 * R^3. Quite nicely, the numerical answer is KE = 7pi Joules.",
    "reference": "https://en.wikipedia.org/wiki/Taylor%E2%80%93Couette_flow,https://farside.ph.utexas.edu/teaching/336L/Fluid/node137.html"
  },
  {
    "question": "Dr. Robotnik, in designing a new rocket booster for his Mega Rocket Shoes, models the rocket as a heat engine that performs work in the form of thrust in transforming heat into work accelerating an incompressible exhaust. We assume the fluid ejects from the approximately massless rocket nozzle at 50m/s. Suppose the combustion chamber operates at a temperature of 2000K and the ambient air is at room temperature. The combustion chamber provides a heat flux of 60000W. Using the ideal gas law, calculate the maximum possible thrust such an rocket thruster can produce. If Dr. Robotnik weighs 200kg and aims the thruster straight down, can it counteract his weight and allow him to levitate?",
    "answer": "\n    T_C = 295 # K\n    T_H = 2000 # K\n    eta = 1 - T_C / T_H # dimensionless, represents maximum efficiency\n    print(f'The maximum efficiency of this engine is {eta}.')\n    Q_dot = 60000 # W\n    W_dot = eta * Q_dot # W\n    v_e = 50 # m/s\n    F_thrust = 2 * W_dot / v_e # N\n    g = 9.81 # m/s\n    F_g = 200 * g # N\n    print(f'The thrust produced is {F_thrust}N.')\n    if F_thrust >= F_g:\n      print(f'This thrust is sufficient to lift Dr. Robotnik, as {F_thrust}N >= {F_g}N.')\n    else:\n      print(f'This thrust is insufficient to lift Dr. Robotnik, as {F_thrust}N < {F_g}N.')\n            ",
    "explanation": "This problem is somewhat whimsical, and so it is best if we stay within the safe and solid grounds of physics and mathematics to calculate the numerical answer. The maximum efficiency of a heat engine is given for a reversible Carnot cycle, being eta=1-T_C/T_H. We can them calculate work as W_dot = eta * Q_dot, a function of the heat flux into the thruster. Finally, we apply this as force to calculate whether the thruster can support Dr. Robotnik. Note that W_dot = 1/2 * rho * Q * v_e^2, where v_e is the exhaust velocity. We arrive at this term by treating Dr. Robotnik as a control volume and taking the momentum flux across the volume boundary from exhaust. Then, F_thrust = p_dot = m_dot * v_e = 2 * W_dot / v_e. We find that F_thrust = 2046N, which is just barely enough to lift Dr. Robotnik, who weights 1962N. Since we only care about momentary results, we can neglect factors such as fuel depleting over time and requiring us to utilize a rocket equation.",
    "reference": ""
  },
  {
    "question": "Suppose you have a choked converging-diverging air nozzle with an exit area of 1m^2 and exhaust density of 1.8kg/m^3. Calculate the throat area that would be required for perfect expansion if the ambient pressure is 101.325kPa.",
    "answer": "\n    import numpy\n    gamma = 7/5\n    p_a = 101325 # Pa\n    rho_ex = 1.8 # kg/m^3\n    T = 295 # K\n    R = 287.053\n    a = numpy.sqrt(gamma * R * T) # m/s\n    lambda_1 = (0.5 * (gamma + 1))**((gamma)/(1-gamma)) * (1 + gamma) # This is an algebraic placeholder\n    lambda_2 = (0.5 * rho_ex * a**2 * lambda_1 - p_a * gamma) # This is an algebraic placeholder\n    M_2 = numpy.sqrt((1-lambda_1) * p_a / lambda_2) # This is an algebraic placeholder\n    A_star = 1\n    A = A_star * (2 / (gamma + 1) + (gamma - 1) / (gamma + 1) * M_2**2)**(0.5 * (gamma + 1) / (gamma - 1))\n    print(f'The cross-sectional area of the exhause nozzle exit is {round(A,2)}m^2.')\n            ",
    "explanation": "First, we take the flow to be isentropic so that p_01 = p_02. Then p_2 / p_02 = p_2 / p_1 * p_1 / p_01. We have exact formulas for both of these ratios in terms of the Mach number, the former from momentum conservation via the Euler equation, the second via other isentropic relations. We take the subscript 1 to apply to the choke point so that M_1=M*=1. We then substitute p_02 in terms of p_2 and M_2, yielding an equation for M_2 in terms of the exit pressure. Since this nozzle is perfectly expanded, the exit pressure is ambient. Finally, we can solve for M_2. We can then use the A/A* relation to find the exit area given the exit Mach number M_2, yielding A=3.52m^2.",
    "reference": ""
  },
  {
    "question": "Suppose you have an aircraft travelling at a rate of 400m/s at t=0, accelerating by 4m/s^2. The aircraft is flying at an altitude of 10000ft. The density and pressure at such an altitude are 0.414kg/m^3 and 26.5kPa. Calculate the time at which the angle of the Mach cone becomes 45 degrees. Assume an isentropic, ideal gas.",
    "answer": "\n    import numpy\n    P = 26.5*1000 # Pa\n    rho = 0.414 # kg/m^3\n    R_air = 287.053 # J/kgK, R_specific for dry air\n    T = P / (rho * R_air) # K\n    gamma = 1.4\n    a = numpy.sqrt(gamma * R_air * T)\n    v = a / numpy.sin(numpy.pi / 4)\n    print(f'The plane will be flying at a speed of {round(v,2)}m/s when the Mach cone angle reaches 45 degrees.')\n    t = (v - 400) / 4\n    print(f'It will take {round(t,2)} seconds to accelerate to this speed.')\n            ",
    "explanation": "There exists an exact formula for the angle of a Mach cone: mu=arcsin(1/M). Since we assume the air is ideal and isentropic, we can calculate the temperature using the ideal gas law, and subsequently the speed of sound as a=sqrt(gamma*R*T), where R is the gas constant, gamma is the isentropic expansion factor, and T is the temperature. Note that R_specific for dry air is approximately 287 J/kgK, as can be found in a lookup table. Finally, we take v=a*csc(mu), and calculate the velocity of the plane at a 45 degree Mach cone to be 423.35m/s, corresponding to t=5.84s.",
    "reference": ""
  },
  {
    "question": "The steam engine of an old train operates by converting heat from the fire into hot steam which operates a cyclic piston. We can model this as a heat engine between a reservoir at T_H=1000K and T_C=273K, generating a work of 8kW. Suppose that since it's a freezing winter, this engine siphons some energy to heat the passenger cars which are maintained at 297K (toasty!). Use the Clausius inequality to calculate a lower bound for which heat must be supplied by the engine to reject 2kW of heat to the passenger cars. Is this a better or worse lower bound than that imposed by energy conservation?",
    "answer": "\n    W_dot = 8000 # kW\n    T_p = 297 # K\n    T_h = 1000 # K\n    T_c = 273 # K\n    Q_p_dot = 2000 # kW\n    Q_H_dot_min = (Q_p_dot / T_p - (Q_p_dot + W_dot) / T_c) / (1 / T_H - 1 / T_C)\n    print(f'The lower bound stipulated by the Clausius inequality is that the heat rejected by the hot reservoir must exceed {Q_H_dot_min}W.')\n            ",
    "explanation": "By Clausius' inequality we have that Q_H/T_H - Q_C/T_C - Q_P/T_P <= 0, where H is the hot reservoir, C is the cold reservoir, and P is the passenger cars. Although we are working with rates, I will multiply all rates by 1 second to obtain Joule values so the naming convention is simpler (Q_H rather than Q_H_dot). Because of energy conservation, Q_C = Q_H - Q_P - W. Then, we can construct an inequality for Q_H that yields by substitution that Q_H must be greater or equal to 10.35kJ. Energy conservation implies Q_H must be at least 10kJ, so the bound imposed by the Clausius inequality is stronger.",
    "reference": ""
  },
  {
    "question": "A quantity of unusual air slowly expands against a piston in a rectangular box until its volume doubles. The initial volume is 10L and the initial pressure is 2 bar. Unlike typical air, however, this substance is a unique mixture and exhibits polytropic index 1.8 for this process. Write a code to sketch the process on a p-V diagram and calculate the work transfer of this process.",
    "answer": "\n    import numpy as np\n    import matplotlib.pyplot as plt\n    \n    # Constants\n    n = 1.8\n    p_1 = 101325 # Pa\n    V_1 = 10 / 1000 # m^3\n    V_2 = 2 * V_1 / 1000 # m^3\n    \n    # Calculations\n    work = p_1 * V_1**n / (1-n) * (V_2**(1-n) - V_1**(1-n))\n    print(f'The work performed by the system is {-round(work,1)}J.')\n    \n    # Volume values\n    V = np.linspace(0.01, 0.02, 100)\n    \n    # Pressure values\n    p = p_1 * V_1**n / V**n / 1000\n    \n    # Plot\n    plt.plot(V, p, color='red')\n    plt.xlabel('Volume (m^3)')\n    plt.ylabel('Pressure (kPa)')\n    plt.title('Pressure vs Volume of Polytropic Expansion')\n    plt.grid(True)\n    plt.show()\n            ",
    "explanation": "To calculate the work performed by the system, we integrate over the pdV term in the fundamental constraint over the process. We make the polytropic substitution, leveraging the fact that pV^n remains constant over the process to integrate with respect to V. This yields the work done by the system, 181.4kJ. The polytropic relation yields an exact formula p(V) for us to plot on a p-V graph of the system using matplotlib.",
    "reference": "https://en.wikipedia.org/wiki/Polytropic_process"
  }
]