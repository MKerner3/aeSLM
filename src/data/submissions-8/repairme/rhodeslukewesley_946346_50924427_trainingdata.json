{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "70f0139c-6f4e-4cd3-accf-1e2088928782",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Question': 'Air undergoes Rayleigh flow with an upstream Mach number of 1.5. Calculate the downstream Mach number assuming a constant specific heat ratio of 1.4.',\n",
       " 'answer': {'code': '\\n\\n        import numpy as np\\n\\n        #parameters\\n        gamma = 1.4 #Specific heat ratio for air\\n        M1 = 1.5    #Mach number upstream\\n\\n        # Calculate downstream Mach number using simplified Rayleigh flow relation\\n        M2 = np.sqrt(((gamma - 1) * M1**2 + 2) / (2 * gamma * M1**2 - (gamma - 1)))\\n        print(\"The Mach number downstream of the shock is:\", M2)\\n        ',\n",
       "  'Explaination': 'In the simplified Rayleigh flow problem provided, the specific Rayleigh flow relation used to calculate the downstream Mach number is derived from the conservation equations of mass and momentum for compressible flow across a normal shock. The specific Rayleigh flow relation used in this context is derived under the assumption of a constant specific heat ratio.',\n",
       "  'References': ['https://kyleniemeyer.github.io/gas-dynamics-notes/compressible-flows/heat-transfer.html',\n",
       "   'https://en.wikipedia.org/wiki/Rayleigh_flow']}}"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "{\n",
    "    \"Question\": \"Explain the continuity Equation for incompressible flow. What does it signify about the flow field?\",\n",
    "    \"answer\": \"In terms of incompressible flow, the continuity equation is simplified due to the assumption of constant density throughout the flow. This equation signifies that the divergence of a flow field is zero, indicating conservation of mass and the incompressibility of the fluid.\"\n",
    "},\n",
    "{\n",
    "    \"Question\": \"How does viscosity impact incompressible flow behavior and when is the effect of viscosity typically negligible?\",\n",
    "    \"answer\": \"Viscosity introduces internal friction within the fluid, this affects momentum transfer between fluid layers causing phenomena like boundary layers, shear stress, and fluid mixing. Viscosity is negligible when the Reynolds Number is very high Re>>1, in this case, inertial forces overcome the viscous forces of the fluid.\"\n",
    "},\n",
    "{\n",
    "    \"Question\": \"Can you describe the relationship between pressure and velocity fields in incompressible flow using Newton's second law of motion?\",\n",
    "    \"answer\": \"According to Newton's second Law, the change of momentum of an object is equal to the net force acting on it. Using this law, we can prove the Bernoulli's Principle through relations between the conservation of momentum and changes in velocity. From this, we can gather that an increase in the velocity of a fluid results in a decrease in the static pressure in order to maintain The Second Law.\",\n",
    "    \"References\": [\"https://en.wikipedia.org/wiki/Bernoulli%27s_principle\",\n",
    "                  \"https://en.wikipedia.org/wiki/Newton%27s_laws_of_motion\",\n",
    "                  ]\n",
    "},\n",
    "{\n",
    "    \"Question\": \"Can you state the importance of the Carnot cycle and state any assumptions and limits of the cycle?\",\n",
    "    \"answer\": \"The Carnot cycle is one of the most fundamental cycles for determining the maximum efficiency of heat engines operating between two temperature reservoirs. For an idealized Carnot Cycle, all processes must be reversible, the heat transfer between the two reservoirs must occur at constant temperatures, and there cannot be any internal friction or turbulence within the system. The cycle is limited by the fact that it is an idealized model restriced by unrealistic reversible processes and temperature limitations.\",\n",
    "    \"References\":[\"https://www.grc.nasa.gov/www/k-12/airplane/carnot.html#:~:text=The%20Carnot%20Cycle%20has%20performed,an%20internal%20combustion%20engine%20works.\"],             \n",
    "},\n",
    "{\n",
    "    \"Question\": \"What role does enthalpy have in representing energy changes, particularly in processes involving heat transfer at constant pressure and how does enthalpy relate to the first law of thermodynamics?\",\n",
    "    \"answer\": \"In processes with constant pressure, enthalpy relates directly to the sum of the heat transfer into and out of the system and the change in the internal energy of the system. The reason enthalpy is calculated with constant pressure is because it simplifies the description of energy transfer. The process of enthalpy compliments the first law of thermodynamics by accounting for both internal energy changes and pressure-volume work.\",\n",
    "    \"References\": [\"https://www1.grc.nasa.gov/beginners-guide-to-aeronautics/newtons-laws-of-motion/#:~:text=Newton's%20first%20law%20states%20that,state%20of%20motion%20is%20inertia.\",\n",
    "                   \"https://en.wikipedia.org/wiki/Enthalpy\",\n",
    "                  ]\n",
    "},\n",
    "{\n",
    "    \"Question\": \"How does a heat pump function and operate in thermodynamics?\",\n",
    "    \"answer\": \"A heat pump is a device that transfers heat from a lower temperature reservoir to a higher temperature reservoir. The operation of a heat pump is simple, first there is compression through a compressor that raises the temperature and pressure of the fluid involved. Then there is condensation throught a condenser where the high pressure fluid is applied by releasing heat into its surroundings , after that the fluid is allowed to pass through an expansion value to decrease its pressure and temperature, finally the low pressure fluid absorbs heat from ambient air and returns back into a vapor to repeat the process.\",\n",
    "    \"References\": [\"https://openbooks.lib.msu.edu/collegephysics/chapter/applications-of-thermodynamics-heat-pumps-and-refrigerators/#:~:text=An%20artifact%20of%20the%20second,without%20violation%20of%20conservation%20principles.\"],\n",
    "},\n",
    "{\n",
    "    \"Question\": \"How does shockwave angle influence flow deflection and changes in flow properties under compressible flow conditions?\",\n",
    "    \"answer\": \"When the shockwave angle is 90 degrees, it is considered a normal shock. The supersonic flow after a normal shock slows down to subsonic due to an abrupt change in fluid pressure, temperature, and density. When the angle is less than 90 degrees, it is considered an oblique shock. There are two types of oblique shocks; strong shocks and weak shocks. Strong shocks slow the fluid down to sub-sonic much like a normal shock. Weak shocks on the other hand, maintain the supersonic flow of the fluid and are much more applicable in airfoil design and application.\",\n",
    "    \"References\": [\"https://www.linkedin.com/pulse/normal-shock-vs-oblique-ramesh-m-sns/\",\n",
    "                   \"https://www.grc.nasa.gov/www/k-12/airplane/normal.html\",\n",
    "                   \"https://www.grc.nasa.gov/www/k-12/airplane/oblique.html\",\n",
    "                  ]\n",
    "}\n",
    "{\n",
    "    \"Question\": \"What is the importance of the mach number in compressible flow and how does it relate to the speed of sound and flow compressibility?\",\n",
    "    \"answer\": \"At speeds faster than the speed of sound, the density of air starts to change and different compressibility effects begin to take effect. The Mach number is the ratio of the object speed to the speed of sound if the ratio is less than 1, it is considered a subsonic condition and compressibility can be ignored. If the Mach number is equal to 1, it is considered transonic flow where only portions of the object are traveling above the speed of sound. Transonic flow creates the compressibilty effects stated earlier which can create immence drag on an object. If the Mach Number is greater than 1, it is considered sonic conditions and shockwave dynamics as well as compressability effects are in play for the object.\",\n",
    "    \"References\": [\"https://www.grc.nasa.gov/www/k-12/airplane/mach.html\",\n",
    "                   \"https://www.grc.nasa.gov/www/k-12/airplane/airsim.html\",\n",
    "                  ]\n",
    "}\n",
    "{\n",
    "    \"Question\": \"How do engineers leverage shockwave phenomena for aerodynamic optimization or minimize undesirable shock effects in vehicle design?\",\n",
    "    \"answer\": \"In a majority of cases, shockwaves induce drag on an object which can result in a decrease of the Mach number. To leverage shockwaves, engineers can use active flow control techniques such as plasma actuators, vortex generators, and boundary layer suction. To combat the undesireable effects, engineers can optimize the designs of their craft by changing the dimensions of the nose, leading edges, airfoils, sweep angles, and engine inlet designs. To further test these characteristcs, engineers can use Computational Fluid Dynamics analysis or wind tunnel testing.\",\n",
    "}\n",
    "{\n",
    "    \"Question\": \"Calculate the pressure drop of a fluid flowing through a cylindrical pipe of length 6.2(m) and radius of 2.2(m) under laminar conditions. The fluid has a viscosity of 0.0056(Pa*s) and the flow rate through the pipe is 0.00345(m^3s).\",\n",
    "    \"Answer\": {\n",
    "        \"code\": \"\"\"\n",
    "        import numpy as np\n",
    "\n",
    "        #Parameters\n",
    "Q = 0.00345  # Volumetric flow rate (m^3/s)\n",
    "L = 6.2   # Length of the pipe (m)\n",
    "mu = 0.0056 # Viscosity of fluid (Pa*s)\n",
    "R = 2.2    # Radius of the pipe (m)\n",
    "\n",
    "        # Calculate the cross-sectional area of the pipe (A = Ï€ * R^2)\n",
    "A = np.pi * R**2\n",
    "\n",
    "       # Calculate the average flow velocity (V = Q / A)\n",
    "V = Q / A\n",
    "\n",
    "        # Calculate the pressure drop (delta_P = 8 * mu * L * v / (np.pi * R^4))\n",
    "delta_P = 8 * mu * L * V / (np.pi * R**4)\n",
    "\n",
    "print(\"the pressure drop across the tube is:\",delta_P,)\n",
    "        \"\"\",\n",
    "        \"Explaination\": \"This code utilizes the effects of laminer flow to calculate the pressure differential through a pipe.\",\n",
    "    }\n",
    "}\n",
    "{\n",
    "    \"Question\": \"At in the sub-sonic low-turbulance wind tunnel lab in the Montgomery Knight Basement, a student is running tests for their AE2610 windtunnel lab by running air over an airfoil. The air flows around a rectangular airfoil with a chord length of 12.2(m) and a thickness of 3(m) at a velocity of 10(m/s) with a constant viscosity of 0.00001(m^2/s) and a constant density of 1(kg/m^3). Use incompressible flow to calculate the maximum velocity and the maximum pressure experienced by the airfoil. Continue by plotting the contour plot of the airfoil on a grid (201x101) with a domain 1.5 times the dimensions of the airfoil. Assume the time differential to be 0.001 (s) to avoid calculus derivation with the navier-stokes equation.\",\n",
    "    \"answer\": {\n",
    "        \"code\": \"\"\"\n",
    "        import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Simulation parameters\n",
    "chord_length = 12.2           # Chord length of the airfoil (meters)\n",
    "airfoil_thickness = 3         # Constant thickness of the airfoil (meters)\n",
    "Nx = 201                      # Number of grid points in x-direction\n",
    "Ny = 101                      # Number of grid points in y-direction\n",
    "Lx = 1.5 * chord_length       # Length of domain in x-direction (extend beyond airfoil)\n",
    "Ly = 1.5 * airfoil_thickness  # Length of domain in y-direction (extend beyond airfoil)\n",
    "dx = Lx / (Nx - 1)\n",
    "dy = Ly / (Ny - 1)\n",
    "U_inflow = 10.0             # Inflow velocity (m/s)\n",
    "nu = 1e-5                   # Kinematic viscosity of air (m^2/s)\n",
    "dt = 0.001                  # Time step size (s)\n",
    "rho = 1.0                   # Density of air (kg/m^3)\n",
    "\n",
    "# Airfoil geometry (uniform thickness across chord length)\n",
    "x_airfoil = np.linspace(0, chord_length, Ny)  # x-coordinates along airfoil\n",
    "yt = np.full_like(x_airfoil, airfoil_thickness) # Constant thickness distribution\n",
    "\n",
    "# Initialize arrays for velocity components (u, v) and pressure (p)\n",
    "u = np.zeros((Ny, Nx))   # Velocity in x-direction\n",
    "v = np.zeros((Ny, Nx))   # Velocity in y-direction\n",
    "p = np.zeros((Ny, Nx))   # Pressure\n",
    "\n",
    "# Boundary conditions\n",
    "u[:, 0] = U_inflow       # Inflow boundary condition\n",
    "u[:, -1] = 0.0           # Outflow boundary condition\n",
    "v[0, :] = 0.0            # No-slip boundary condition on top wall (airfoil surface)\n",
    "v[-1, :] = 0.0           # No-slip boundary condition on bottom wall (airfoil surface)\n",
    "\n",
    "# Main loop (solve Navier-Stokes equations using finite difference method)\n",
    "max_iterations = 150\n",
    "tolerance = 1.045\n",
    "for iteration in range(max_iterations):\n",
    "    u_old = u.copy()\n",
    "    v_old = v.copy()\n",
    "\n",
    "    # Solve for x-velocity component\n",
    "    for i in range(1, Ny - 1):\n",
    "        for j in range(1, Nx - 1):\n",
    "            u[i, j] = (u_old[i, j-1] + u_old[i, j+1] + \\\n",
    "                       u_old[i-1, j] + u_old[i+1, j]) / 4.0 - \\\n",
    "                       dt / (4.0 * dx) * (p[i, j+1] - p[i, j-1]) + \\\n",
    "                       nu * (dt / dx**2) * (u_old[i, j-1] - 2.0 * u_old[i, j] + u_old[i, j+1]) + \\\n",
    "                       nu * (dt / dy**2) * (u_old[i-1, j] - 2.0 * u_old[i, j] + u_old[i+1, j])\n",
    "                       \n",
    "    # Solve for y-velocity component\n",
    "    for i in range(1, Ny - 1):\n",
    "        for j in range(1, Nx - 1):\n",
    "            v[i, j] = (v_old[i, j-1] + v_old[i, j+1] + \\\n",
    "                       v_old[i-1, j] + v_old[i+1, j]) / 4.0 - \\\n",
    "                       dt / (4.0 * dy) * (p[i+1, j] - p[i-1, j]) + \\\n",
    "                       nu * (dt / dx**2) * (v_old[i, j-1] - 2.0 * v_old[i, j] + v_old[i, j+1]) + \\\n",
    "                       nu * (dt / dy**2) * (v_old[i-1, j] - 2.0 * v_old[i, j] + v_old[i+1, j])\n",
    "                       \n",
    "    # Solve for pressure\n",
    "    for i in range(1, Ny - 1):\n",
    "        for j in range(1, Nx - 1):\n",
    "            p[i, j] = ((p[i, j-1] + p[i, j+1]) * dy**2 + \\\n",
    "                       (p[i-1, j] + p[i+1, j]) * dx**2) / (2.0 * (dx**2 + dy**2)) - \\\n",
    "                       rho * (dx * dy) / (2.0 * dt) * ((u[i, j+1] - u[i, j-1]) / (2.0 * dx) + \\\n",
    "                                                         (v[i+1, j] - v[i-1, j]) / (2.0 * dy))\n",
    "        \n",
    "       \n",
    "    # Check convergence\n",
    "    if np.max(np.abs(u - u_old)) < tolerance and np.max(np.abs(v - v_old)) < tolerance:\n",
    "        print(f\"Converged after {iteration + 1} iterations.\")\n",
    "    if np.max(np.abs(u - u_old)) > tolerance and np.max(np.abs(v - v_old)) > tolerance:\n",
    "        print(f\"Diverged after {iteration + 1} iterations.\")\n",
    "        break\n",
    "        break\n",
    "        \n",
    "# Plot the velocity magnitude contours\n",
    "velocity_magnitude = np.sqrt(u**2 + v**2)\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.contourf(np.linspace(0, Lx, Nx), np.linspace(0, Ly, Ny), velocity_magnitude, cmap='inferno')\n",
    "plt.plot(x_airfoil, yt, color='red')  # Plot airfoil profile\n",
    "plt.colorbar(label='Velocity Magnitude (m/s)')\n",
    "plt.xlabel('x (m)')\n",
    "plt.ylabel('y (m)')\n",
    "plt.title('Incompressible Flow around an Airfoil with Constant Thickness')\n",
    "plt.show()\n",
    "max_velocity = np.max(np.sqrt((np.max(v))**2+(np.max(u))**2))\n",
    "max_pressure = np.max(p)\n",
    "print(\"The maximum velocity experienced is\", max_velocity, \"(m/s)\")\n",
    "print(\"the maximum pressure experienced is\", max_pressure, \"(Pa)\")\n",
    "\"\"\",\n",
    "        \"Explaination\": \"This problem assumes steady state behavior and employs numerical methods (finite difference) to solve the Navier Stokes equation and momentum equations for fluid flow.\",\n",
    "        \"References\": [\"https://www.slideshare.net/SatyaSahoo20/numerical-solution-of-the-navier-stokes-equations-using-the-finite-difference-mehtod\",\n",
    "                       \"https://gtae.gitbook.io/ae2610/wing\",\n",
    "                       \"https://matplotlib.org/stable/users/explain/colors/colormaps.html\",\n",
    "                       \"https://education.molssi.org/python-visualization/matplotlib/contour.html#:~:text=Creating%20a%20contour%20plot,-Now%20that%20we&text=For%20the%20contour%20function%2C%20you,the%20y%2Daxis%20the%20same.\",\n",
    "                       \"https://www.sciencedirect.com/topics/engineering/continuity-equation#:~:text=Continuity%20Equation%20(Conservation%20of%20Mass)&text=4.1)%20is%20the%20statement%20of,out%20equals%20change%20of%20mass.&text=The%20first%20term%20in%20the,of%20the%20pipeline%20cross%2Dsection.\"\n",
    "                      ]\n",
    "    }\n",
    "}\n",
    "{\n",
    "    \"Question\": \"An unknown amount of ideal gas undergoes adiabatic compression in a piston-cylinder device. The initial pressure, volume, and temperature of the gas are known to be 4(atm), 1(L), and 300(K) respectively. The gas is compressed to a final volume of 0.5 (L). Calculate the final pressure of the gas after compression in Pascals. Assume n to be 1.3\",\n",
    "    \"answer\": {\n",
    "        \"code\": \"\"\"\n",
    "        import numpy as np\n",
    "        \n",
    "        #Parameters\n",
    "        P1 = 4     #Initial pressure of the gas (atm)\n",
    "        V1 = 1     #Initial volume of the gas (L)\n",
    "        V2 = 0.5   #Final Volume of the gas (L)\n",
    "        n = 1.3    #Polytropic exponent for adiabatic compression\n",
    "\n",
    "        # Convert the inital pressure value for correct calculation of the final pressure\n",
    "           P1A = P1 * 101325\n",
    "        # Convert the initial and final volume of the gas to cubic meters for correct calculation of the final pressure.\n",
    "           V1A = V1 * 0.001\n",
    "           V2A = V2 * 0.001\n",
    "        \n",
    "        # Using the polytropic process equation P1 * V1^n = P2 * V2^n\n",
    "        # Solve for P2\n",
    "           P2 = P1 * (V1 / V2)**n\n",
    "        print(\"The final pressure of the gas after compression is:\", P2, \"(Pa)\")\n",
    "        \"\"\",\n",
    "        \"Explaination\": \"In this problem, we assume that the compression process is adiabatic and a polytropic process. Furthermore, the first law of thermodynamics is used to relate the initial and final states of the gas.\",\n",
    "        \"References\": [\"https://www.grc.nasa.gov/www/k-12/airplane/compexp.html\"]\n",
    "    }\n",
    "}\n",
    "{\n",
    "    \"Question\": \"At a local nuclear powerplant, a carnot heat engine operates between two reservoirs at different temperatures, a high-temperature reservoir at 750(K) and a low-temperature reservoir at 125(K). The engine uses an experimental working fluid known as 'PI-nium' with a specific heat capacity of 3.14 J/gK, the use of this special fluid allows for zero heat losses within the nuclear powerplant allowing it to function at 100% efficiency. Determine the maximum theoretical efficiency (n) of this heat engine taking into account the specific heat capacity of the working fluid, 'PI-nium'.\",\n",
    "    \"answer\": {\n",
    "        \"code\": \"\"\"\n",
    "\n",
    "        import numpy as np\n",
    "        #Parameters\n",
    "        T1 = 750    #Initial temperature of the high-temperature reservoir (K)\n",
    "        T2 = 125    #Initial temperature of the low-temperature reservoir (K)\n",
    "        c =  3.14   #Specific heat capacity of PI-nium (J/gK)\n",
    "\n",
    "        # Calculate the real efficiency of the heat engine considering specific heat capacity.\n",
    "        n = (1-(T1/T2)) * (1 + (T2-T1)/(c*T1) / (c * T2)) \n",
    "        \n",
    "        print(\"The efficiency of the heat engine is:\", n)\n",
    "        \"\"\",\n",
    "        \"Explaination\": \"The problem assumes idealized thermodynamic behavior within the context of the specified temperatures and specific heat capacity, providing a practical application of thermodynamic principles. The process is also assumed to be reversible and is constrained by the second law of thermodynamics. To explain the equation,we can modify the efficiency equation to account for additional factors influencing the heat transfer process. For example, if we introduce specific heat capacity in the equation, we need to adjust it to account for the energy required to change the temperature of the working fluid. \",\n",
    "        \"References\": [\"https://en.wikipedia.org/wiki/Reversible_process_(thermodynamics)\",\n",
    "                       \"https://pressbooks.bccampus.ca/thermo1/chapter/6-1-heat-engine/#:~:text=A%20heat%20engine%20is%20a,fluid%20or%20experience%20phase%20changes.\",\n",
    "                       \"https://pressbooks.bccampus.ca/collegephysics/chapter/carnots-perfect-heat-engine-the-second-law-of-thermodynamics-restated/\",\n",
    "                      ]\n",
    "    }\n",
    "}\n",
    "{\n",
    "    \"Question\": \"Air enters a choked adiabatic converging-diverging nozzle at a stagnation temperature 500 (K) and stagnation pressure 200 (kPa). The nozzle throat area is known. What is the exit velocity and Mach number assuming isentropic flow?. Assume Gamma = 1.4 and R = 287\",\n",
    "    \"answer\": {\n",
    "        \"code\": \"\"\"\n",
    "\n",
    "        import numpy as np\n",
    "\n",
    "        #parameters\n",
    "        gamma = 1.4 #Specific heat ratio for air\n",
    "        T01 = 500   # Stagnation Temperature of air (K)\n",
    "        P01 = 250   # Stagnation Pressure of air (kPa)\n",
    "        R = 287     # Universal Gas Constant\n",
    "        \n",
    "        # Calculate critical properties at throat (choked flow)\n",
    "        T_initial = T01 * (2 / (gamma + 1))\n",
    "        P_initial = P01 * (2 / (((gamma + 1))**(gamma / (gamma - 1))))                       \n",
    "                       \n",
    "        # Calculate Mach number at throat, choked condition, therefore, can be ommitted from equation.\n",
    "        M_initial = 1\n",
    "        \n",
    "        # Calculate exit Mach number using area-Mach number relation for isentropic flow\n",
    "        M_exit = np.sqrt(((P01/P_initial)**((gamma - 1)/gamma) - 1) * (2/(gamma - 1)))\n",
    "        \n",
    "        # Calculate exit temperature and pressure\n",
    "        T_exit = T01 / (1 + (gamma - 1)/2 * M_exit**2)\n",
    "        P_exit = P01 / (1 + (gamma - 1)/2 * M_exit**2)**(gamma/(gamma - 1))\n",
    "        \n",
    "        # Calculate exit velocity\n",
    "        V_exit = M_exit * np.sqrt(gamma * R * T_exit)\n",
    "        print(\"The exit Mach number and velocity are:\", M_exit, \"and\", V_exit, \"respectively\")\n",
    "        \"\"\",\n",
    "        \"Explaination\": \"For this problem, I used isentropic flow relations for compressible flow, this includes the Mach number, temperature ratio (T/T01), and pressure ratio (P/P0). I also used the Area-Mach number relation for choked flow through a nozzle.\",\n",
    "        \"References\": [\"https://www.grc.nasa.gov/www/k-12/airplane/isentrop.html\",\n",
    "                       \"https://www.grc.nasa.gov/www/k-12/airplane/mflchk.html\",\n",
    "                      ]\n",
    "    }\n",
    "}\n",
    "{\n",
    "    \"Question\": \"Air at Mach 2 enters a normal shock wave. Determine the properties downstream of the shock wave including pressure, temperature, and mach number. Assume gamma = 1.4.\",\n",
    "    \"answer\": { \n",
    "        \"code\": \"\"\"\n",
    "\n",
    "        import numpy as np\n",
    "\n",
    "        #parameters\n",
    "        gamma = 1.4   #Specific heat ratio for air\n",
    "        M1 = 2         #Upstream Mach number\n",
    "\n",
    "        # Calculate properties across normal shock wave\n",
    "        P2_P1 = 1 + 2 * gamma / (gamma + 1) * (M1**2 - 1)\n",
    "        T2_T1 = (2 * gamma * M1**2 - (gamma - 1)) / ((gamma + 1) * M1**2)\n",
    "        rho2_rho1 = (gamma + 1) * M1**2 / (1 + 2 * gamma / (gamma + 1) * (M1**2 - 1))\n",
    "        \n",
    "        # Calculate downstream Mach number\n",
    "        M2 = np.sqrt((M1**2 + 2 / gamma - 1) / (2 * gamma / (gamma - 1) * M1**2 - 1))\n",
    "        print(\"The properties downstream of the normal shockwave are:\")\n",
    "        print(\"Pressure:\", P2_P1, \"(Pa)\")\n",
    "        print(\"temperature:\",T2_T1, \"(K)\")\n",
    "        print(\"Density:\",rho2_rho1, \"(Kg/m^3)\")\n",
    "        print(\"Mach Number:\", M2)\n",
    "        \"\"\",\n",
    "        \"Explaination\": \"This problem uses normal shock relations for compressible flow including Mach number, temperature ratio, pressure ratio, and density ratio. This problem also uses the conservation laws across a shockwave: mass, momentum, and energy.\",\n",
    "        \"References\": [\"https://www.grc.nasa.gov/www/k-12/airplane/isentrop.html\",\n",
    "                       \"https://www.grc.nasa.gov/www/k-12/airplane/mflchk.html\",\n",
    "                      ]\n",
    "    }\n",
    "}\n",
    "{\n",
    "    \"Question\": \"Air undergoes Rayleigh flow with an upstream Mach number of 1.5. Calculate the downstream Mach number assuming a constant specific heat ratio of 1.4.\",\n",
    "    \"answer\": {\n",
    "        \"code\": \"\"\"\n",
    "\n",
    "        import numpy as np\n",
    "\n",
    "        #parameters\n",
    "        gamma = 1.4 #Specific heat ratio for air\n",
    "        M1 = 1.5    #Mach number upstream\n",
    "\n",
    "        # Calculate downstream Mach number using simplified Rayleigh flow relation\n",
    "        M2 = np.sqrt(((gamma - 1) * M1**2 + 2) / (2 * gamma * M1**2 - (gamma - 1)))\n",
    "        print(\"The Mach number downstream of the shock is:\", M2)\n",
    "        \"\"\",\n",
    "        \"Explaination\": \"In the simplified Rayleigh flow problem provided, the specific Rayleigh flow relation used to calculate the downstream Mach number is derived from the conservation equations of mass and momentum for compressible flow across a normal shock. The specific Rayleigh flow relation used in this context is derived under the assumption of a constant specific heat ratio.\",\n",
    "        \"References\": [\"https://kyleniemeyer.github.io/gas-dynamics-notes/compressible-flows/heat-transfer.html\",\n",
    "                       \"https://en.wikipedia.org/wiki/Rayleigh_flow\",\n",
    "                      ]\n",
    "    }\n",
    "}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4073b82b-75b9-403e-ba39-2ef6f63ca416",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
